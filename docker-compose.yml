services:
  finance-admin:
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-finance-admin:latest
    build:
      dockerfile: docker/finance-admin/Dockerfile
    ports:
      - "8889:8888"
    environment:
      PORT: 8888
      PREFIX: /finance-admin
      SIRIUS_PUBLIC_URL: http://host.docker.internal:3000
      SIRIUS_URL: http://json-server:3000
      BACKEND_URL: http://finance-admin-api:8080
      HUB_URL: http://finance-hub-api:8080
      JWT_SECRET: mysupersecrettestkeythatis128bits
      HEALTHCHECK: /finance-admin/health-check
    depends_on:
      finance-admin-api:
        condition: service_healthy
      finance-hub-api:
        condition: service_healthy
      json-server:
        condition: service_started

  finance-admin-api:
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-finance-admin-api:latest
    build:
      dockerfile: docker/finance-admin-api/Dockerfile
    ports:
      - "8182:8080"
    environment:
      ASYNC_S3_BUCKET: opg-backoffice-async-uploads-local
      AWS_REGION: eu-west-1
      AWS_S3_ENDPOINT: http://localstack:4566
      AWS_BASE_URL: http://localstack:4566
      AWS_ACCESS_KEY_ID: localstack
      AWS_SECRET_ACCESS_KEY: localstack
      EVENT_BUS_NAME: local-main
      S3_ENCRYPTION_KEY: alias/aws/s3
      PORT: 8080
      HEALTHCHECK: /health-check
    depends_on:
      localstack:
        condition: service_healthy

  localstack:
    image: localstack/localstack:4.0
    volumes:
      - "./scripts/localstack/init:/etc/localstack/init/ready.d"
      - "./scripts/localstack/wait:/scripts/wait"
    ports:
      - "4567:4566"
    environment:
      AWS_DEFAULT_REGION: eu-west-1
    healthcheck:
      test: bash /scripts/wait/healthcheck.sh
      interval: 20s
      timeout: 30s
      retries: 50
    restart: unless-stopped

  cypress:
    build:
      dockerfile: docker/cypress/Dockerfile
    command: [ "--headless", "-b", "electron" ]
    volumes:
      - ./cypress/screenshots:/root/cypress/screenshots:rw,delegated
      - ./cypress/logs:/root/cypress/logs:rw,delegated
    depends_on:
      finance-admin:
        condition: service_healthy

  go-lint:
    image: golangci/golangci-lint:v1.64.5
    working_dir: /go/src/app
    volumes:
      - ./:/go/src/app
      - ./.cache/golangci-lint/v1.64.5:/root/.cache
    command: golangci-lint run -v --timeout 5m

  gosec:
    image: securego/gosec:latest
    working_dir: /app
    volumes:
      - .:/app
    command: -exclude-dir=.gocache -fmt=sarif -out=/app/test-results/gosec.sarif -stdout -verbose=text /app/...

  trivy:
    image: aquasec/trivy:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.trivy-cache:/root/.cache
      - ./test-results:/test-results
      - ./.trivyignore:/.trivyignore
    environment:
      - TRIVY_DB_REPOSITORY=${TRIVY_DB_REPOSITORY}
      - TRIVY_JAVA_DB_REPOSITORY=${TRIVY_JAVA_DB_REPOSITORY}
      - TRIVY_USERNAME=${DOCKER_USERNAME}
      - TRIVY_PASSWORD=${DOCKER_PASSWORD}

  yarn:
    image: node:22-alpine3.19
    working_dir: /home/node/app
    entrypoint: yarn
    volumes:
      - ./finance-admin:/home/node/app

  json-server:
    build:
      dockerfile: docker/json-server/Dockerfile
    ports:
      - '3001:3000'

  finance-hub-api:
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-finance-api:latest
    ports:
      - "8282:8080"
    environment:
      ASYNC_S3_BUCKET: opg-backoffice-async-uploads-local
      AWS_ACCESS_KEY_ID: localstack
      AWS_BASE_URL: http://localstack:4566
      AWS_IAM_ROLE: arn:aws:iam::000000000000:role/role
      AWS_REGION: eu-west-1
      AWS_S3_ENDPOINT: http://localstack:4566
      AWS_SECRET_ACCESS_KEY: localstack
      EVENT_BRIDGE_API_KEY: test
      EVENT_BUS_NAME: local-main
      FINANCE_ADMIN_PREFIX: /supervision/finance-admin
      FINANCE_HUB_LIVE_DATE: 01/01/2024
      JWT_SECRET: mysupersecrettestkeythatis128bits
      OPG_NOTIFY_API_KEY: test
      OPG_SUPERVISION_SYSTEM_USER_ID: 1
    healthcheck:
      test: wget -O /dev/null -S 'http://localhost:8080/health-check' 2>&1 | grep 'HTTP/1.1 200 OK' || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s
